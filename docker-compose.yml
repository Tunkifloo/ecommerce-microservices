services:

  postgres:
    image: postgres:${POSTGRES_VERSION:-17-alpine}
    container_name: ${POSTGRES_CONTAINER_NAME:-ecommerce-postgres}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-admin123}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    ports:
      - "${POSTGRES_HOST_PORT:-5433}:${POSTGRES_CONTAINER_PORT:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-databases.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./docker/init-schemas.sql:/docker-entrypoint-initdb.d/02-schemas.sql
    networks:
      - ${NETWORK_NAME:-ecommerce-network}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-admin} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5


  zookeeper:
    image: confluentinc/cp-zookeeper:${ZOOKEEPER_VERSION:-7.6.0}
    container_name: ${ZOOKEEPER_CONTAINER_NAME:-ecommerce-zookeeper}
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_CLIENT_PORT:-2181}
      ZOOKEEPER_TICK_TIME: ${ZOOKEEPER_TICK_TIME:-2000}
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - ${NETWORK_NAME:-ecommerce-network}
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "${ZOOKEEPER_CLIENT_PORT:-2181}"]
      interval: 10s
      timeout: 5s
      retries: 5


  kafka:
    image: confluentinc/cp-kafka:${KAFKA_VERSION:-7.6.0}
    container_name: ${KAFKA_CONTAINER_NAME:-ecommerce-kafka}
    restart: unless-stopped
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "${KAFKA_INTERNAL_PORT:-9092}:9092"
      - "${KAFKA_HOST_PORT:-9093}:9093"
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID:-1}
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER_CONTAINER_NAME:-ecommerce-zookeeper}:${ZOOKEEPER_CLIENT_PORT:-2181}

      # Listeners
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_CONTAINER_NAME:-ecommerce-kafka}:9092,PLAINTEXT_HOST://localhost:${KAFKA_HOST_PORT:-9093}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      # Configuraciones de Tópicos
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: ${KAFKA_REPLICATION_FACTOR:-1}
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: ${KAFKA_REPLICATION_FACTOR:-1}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "${KAFKA_AUTO_CREATE_TOPICS:-true}"

      # Configuraciones de Rendimiento
      KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS:-3}
      KAFKA_DEFAULT_REPLICATION_FACTOR: ${KAFKA_REPLICATION_FACTOR:-1}
      KAFKA_MIN_INSYNC_REPLICAS: 1

      # Logs y Retención
      KAFKA_LOG_RETENTION_HOURS: ${KAFKA_LOG_RETENTION_HOURS:-168}
      KAFKA_LOG_SEGMENT_BYTES: ${KAFKA_LOG_SEGMENT_BYTES:-1073741824}
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - ${NETWORK_NAME:-ecommerce-network}
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 10s
      retries: 5


  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ${KAFKA_UI_CONTAINER_NAME:-ecommerce-kafka-ui}
    restart: unless-stopped
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "${KAFKA_UI_HOST_PORT:-8091}:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_UI_CLUSTER_NAME:-ecommerce-local}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_CONTAINER_NAME:-ecommerce-kafka}:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: ${ZOOKEEPER_CONTAINER_NAME:-ecommerce-zookeeper}:${ZOOKEEPER_CLIENT_PORT:-2181}
      DYNAMIC_CONFIG_ENABLED: "true"
    networks:
      - ${NETWORK_NAME:-ecommerce-network}


volumes:
  postgres_data:
    driver: local
  kafka_data:
    driver: local


networks:
  ecommerce-network:
    driver: bridge
    name: ${NETWORK_NAME:-ecommerce-network}